version: '3.7'
services:
    frontend:
      image: cmp-frontend-image
      container_name: cmp-frontend-container
      build:
        context: ./app-frontend 
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      networks:
        - cmp-frontend-network

    backend:
      image: cmp-backend-image
      container_name: cmp-backend-container
      build:
        context: ./app-backend/
        dockerfile: Dockerfile
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
      working_dir: /var/www
      volumes:
        - ./app-backend:/var/www
      ports:
        - "8001:8001"
      networks:
        - cmp-frontend-network
        - cmp-db-network

    database:
      image: mysql:5.7
      container_name: cmp-db-container
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
      volumes:
        - ./mysql:/docker-entrypoint-initdb.d:ro
        - cmp_db_data:/var/lib/mysql:rw
        # - ./mysql/backup:/var/lib/mysql:rw
      ports:
        - 3306:3306
      networks:
        - cmp-db-network

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: cmp-db-phpmyadmin
      restart: unless-stopped
      environment:
        PMA_HOST: database
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      depends_on:
        - database
      ports:
        - 8443:80
      networks:
        - cmp-db-network

networks:
  cmp-frontend-network:
    driver: bridge
  cmp-db-network:
    driver: bridge

volumes:
  cmp_db_data:
#     driver: "local"